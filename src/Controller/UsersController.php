<?php

namespace App\Controller;

class UsersController extends AppController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

        $this->Auth->allow(['add']);

    }

    public function index(){
        $u = $this->Users->find();
        $this->set(compact('u'));
    }

    public function login(){
        if($this->request->is('post')){
            $user = $this->Auth->identify();
            if($user){
                $this->Auth->setUser($user);
                return $this->redirect($this->redirect(['controller' => 'artists', 'action' => 'index']));
            }
            $this->Flash->error('Votre identifiant ou votre mot de passe est incorrect');
        }
    }

    public function changeAccount(){
        $this->redirect($this->Auth->logout());
    }

    public function logout(){
        $this->Auth->logout();
        $this->redirect(['controller' => 'Artists', 'action' => 'index']);
    }

    public function view($id){
        $connectedUser= $this->Users->get($this->Auth->user('id'), [
            'contain' => ['Favourites.Artists']
        ]);
        $user = $this->Users->get($id, [
            'contain' => ['Favourites.Artists']
        ]);

        $this->set(compact('user', 'connectedUser'));
    }

    public function edit($id){
        $editM = $this->Users->get($id);

        if($this->request->is(['post', 'put'])){
            if(file_exists('../webroot/data/posters/'.$editM->poster)){
                unlink('../webroot/data/posters/'.$editM->poster);
            }
            $this->Users->patchEntity($editU, $this->request->getData());

            if($this->Users->save($editU)){
                if(in_array($this->request->getData('poster')['type'], ['image/png', 'image/jpg', 'image/jpeg', 'image/gif'])){

                    //recupère l'extension qui était utilisée
                    $ext = pathinfo($this->request->getData('poster')['name'], PATHINFO_EXTENSION);

                    //Creation du nouveau nom
                    $name = 'poster-'. rand(0,999).'-'.time().'.'.$ext;

                    //reconstruction du chemin global de fichier
                    $address = WWW_ROOT.'/data/posters/'.$name;

                    //Valeur à enregistrer dans la base
                    $new->poster = $name;

                    //on le déplace de la mémoire temporaire vers l'emplacement souhaité
                    move_uploaded_file($this->request->getData('poster')['tmp_name'], $address);

                } else {
                    $this->Flash->error('Ce format de fichier n\'est pas autorisé.');
                }
                $this->Flash->success('Modif Ok');
                return $this->redirect(['action' => 'view', $id]);
            }
            $this->Flash->error('Planté');
        }

        $this->set(compact('editM'));
    }

    public function add(){
        //Crée une entité vide
        $new = $this->Users->newEntity();

        //Si on arrive sur cette action en methode post
        if($this->request->is('post')){
            $new = $this->Users->patchEntity($new, $this->request->getData());

            if($this->Users->save($new)){
                $this->Flash->success('Ok');

                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error('Planté');
        }

        //Envoie la variable dans la vue
        $this->set(compact('new'));
    }

    public function delete($id){
        if($this->request->is(['post', 'delete'])){
            //on récupère l'élément ciblé
            $delM = $this->Users->get($id);

            if($this->Users->delete($delM)){
                $this->Flash->success('Supprimé');
                return $this->redirect(['action' => 'index']);
            } else {
                $this->Flash->error('Suppresion ratée');
                return $this->redirect(['action' => 'view', $id]);
            }
        } else {
            throw new NotFoundException('Tu te crois malin ? C\'est pas comme ça que ça marche !    ');
        }
    }



}