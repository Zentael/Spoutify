<?php

namespace App\Controller;
use Cake\Http\Exception\NotFoundException;

class RequestsController extends AppController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function index(){


        $requests = $this->Requests->find();
        $requestUsers = $this->Requests->Users->find();
        $singleUserRequest = [];

        foreach($requests as $request){
            $requestUserId = $request->user_id;

            //Dernier album de l'artiste
            $singleUserRequest[$request->id] = $requestUsers->where(['id' => $requestUserId])->first();
            $requestUsers = $this->Requests->Users->find(); //reset
        }

        $this->set(compact('requests', 'singleUserRequest'));
    }

    public function view($id){

        $request = $this->Requests->get($id);
        $requestUser = $this->Requests->Users->get($request->user_id);

        $request->status = "read";
        $this->Requests->save($request);

        $this->set(compact( 'request', 'requestUser'));
    }

    public function add($user_id){
        //Crée une entité vide
        $newRequest = $this->Requests->newEntity();


        if($this->request->is('post')) {
            $newRequest = $this->Requests->patchEntity($newRequest, $this->request->getData());
            $newRequest->user_id = $user_id;

            if($this->Requests->save($newRequest)){
                $this->Flash->success('Ok');
                return $this->redirect(['controller' => 'Users', 'action' => 'view', $user_id]);
            }
            $this->Flash->error('Planté');
        }



        //Envoie la variable dans la vue
        $this->set(compact('newRequest'));
    }

    public function accept($id){
        return $this->redirect(['controller' => 'artists', 'action' => 'add', $id]);
    }

    public function delete($id){
        if($this->request->is(['post', 'delete'])){
            //on récupère l'élément ciblé
            $delR = $this->Requests->get($id);

            if($this->Requests->delete($delR)){
                $this->Flash->success('La demande a été effacée');
                return $this->redirect(['action' => 'index']);
            } else {
                $this->Flash->error('Suppresion du favoris ratée');
                return $this->redirect(['action' => 'index']);
            }
        } else {
            throw new NotFoundException('Tu te crois malin ? C\'est pas comme ça que ça marche !');
        }
    }

}